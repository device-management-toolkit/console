basePath: /v1
definitions:
  entity.CIRAConfig:
    properties:
      authMethod:
        example: 2
        type: integer
      commonName:
        example: example.com
        type: string
      configName:
        example: My CIRA Config
        type: string
      mpsPort:
        example: 443
        type: integer
      mpsRootCertificate:
        example: |-
          -----BEGIN CERTIFICATE-----
          ...
        type: string
      mpsServerAddress:
        example: https://example.com
        type: string
      password:
        example: my_password
        type: string
      proxyDetails:
        example: http://example.com
        type: string
      regeneratePassword:
        example: true
        type: boolean
      serverAddressFormat:
        example: 201
        type: integer
      tenantId:
        example: abc123
        type: string
      username:
        example: my_username
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  entity.CertCreationResult:
    properties:
      cert:
        type: string
      certBin:
        type: string
      checked:
        example: true
        type: boolean
      'h:':
        type: string
      key:
        items:
          type: integer
        type: array
      pem:
        type: string
      privateKey:
        type: string
      privateKeyBin:
        type: string
    type: object
  entity.Device:
    properties:
      allowSelfSigned:
        type: boolean
      connectionStatus:
        type: boolean
      deviceInfo:
        $ref: '#/definitions/entity.DeviceInfo'
      dnsSuffix:
        type: string
      friendlyName:
        type: string
      guid:
        type: string
      hostname:
        type: string
      lastConnected:
        type: string
      lastDisconnected:
        type: string
      lastSeen:
        type: string
      mpsInstance:
        type: string
      mpsusername:
        type: string
      password:
        type: string
      tags:
        items:
          type: string
        type: array
      tenantId:
        type: string
      useTLS:
        type: boolean
      username:
        type: string
    type: object
  entity.DeviceInfo:
    properties:
      currentMode:
        type: string
      features:
        type: string
      fwBuild:
        type: string
      fwSku:
        type: string
      fwVersion:
        type: string
      ipAddress:
        type: string
      lastUpdated:
        type: string
    type: object
  entity.Domain:
    properties:
      domainSuffix:
        example: example.com
        type: string
      profileName:
        example: My Profile
        type: string
      provisioningCert:
        example: |-
          -----BEGIN CERTIFICATE-----
          ...
        type: string
      provisioningCertPassword:
        example: my_password
        type: string
      provisioningCertStorageFormat:
        example: PKCS12
        type: string
      tenantId:
        example: abc123
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  entity.IEEE8021xConfig:
    properties:
      activeInS0:
        example: true
        type: boolean
      authenticationProtocol:
        example: 1
        type: integer
      domain:
        example: example.com
        type: string
      password:
        example: my_password
        type: string
      profileName:
        example: My Profile
        type: string
      pxeTimeout:
        example: 60
        type: integer
      roamingIdentity:
        example: my_roaming_identity
        type: string
      serverName:
        example: example.com
        type: string
      tenantId:
        example: abc123
        type: string
      username:
        example: my_username
        type: string
      version:
        example: 1.0.0
        type: string
      wiredInterface:
        example: false
        type: boolean
    type: object
  entity.Profile:
    properties:
      activation:
        example: activate
        type: string
      amtPassword:
        example: my_password
        type: string
      ciraConfigName:
        example: My CIRA Config
        type: string
      ciraConfigObject:
        $ref: '#/definitions/entity.CIRAConfig'
      dhcpEnabled:
        example: true
        type: boolean
      generateRandomMEBxPassword:
        example: true
        type: boolean
      generateRandomPassword:
        example: true
        type: boolean
      iderEnabled:
        example: true
        type: boolean
      ieee8021xProfileName:
        example: My Profile
        type: string
      ieee8021xProfileObject:
        $ref: '#/definitions/entity.IEEE8021xConfig'
      ipSyncEnabled:
        example: true
        type: boolean
      kvmEnabled:
        example: true
        type: boolean
      localWifiSyncEnabled:
        example: true
        type: boolean
      mebxPassword:
        example: my_password
        type: string
      profileName:
        example: My Profile
        type: string
      solEnabled:
        example: true
        type: boolean
      tags:
        example:
        - tag1
        - tag2
        items:
          type: string
        type: array
      tenantId:
        example: abc123
        type: string
      tlsCerts:
        $ref: '#/definitions/entity.TLSCerts'
      tlsMode:
        example: 1
        type: integer
      tlsSigningAuthority:
        example: SelfSigned
        type: string
      userConsent:
        example: All
        type: string
      version:
        example: 1.0.0
        type: string
      wifiConfigs:
        items:
          $ref: '#/definitions/entity.ProfileWifiConfigs'
        type: array
    type: object
  entity.ProfileWifiConfigs:
    properties:
      priority:
        example: 1
        type: integer
      profileName:
        example: My Profile
        type: string
      tenantId:
        example: abc123
        type: string
    type: object
  entity.TLSCerts:
    properties:
      issuedCertificate:
        $ref: '#/definitions/entity.CertCreationResult'
      rootCertificate:
        $ref: '#/definitions/entity.CertCreationResult'
      version:
        type: string
    type: object
  v1.DeviceCountResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.Device'
        type: array
      totalAccount:
        type: integer
    type: object
  v1.DomainCountResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.Domain'
        type: array
      totalAccount:
        type: integer
    type: object
  v1.ProfileCountResponse:
    properties:
      profile:
        items:
          $ref: '#/definitions/entity.Profile'
        type: array
      totalAccount:
        type: integer
    type: object
  v1.response:
    properties:
      error:
        example: message
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Using a translation service as an example
  title: Go Clean Template API
  version: "1.0"
paths:
  /api/v1/admin/devices:
    get:
      consumes:
      - application/json
      description: Show all devices
      operationId: devices
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.DeviceCountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: Show Devices
      tags:
      - devices
  /api/v1/admin/domains:
    get:
      consumes:
      - application/json
      description: Show all domains
      operationId: domains
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.DomainCountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: Show Domains
      tags:
      - domains
  /api/v1/admin/profiles:
    get:
      consumes:
      - application/json
      description: Show all profiles
      operationId: profiles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ProfileCountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: Show Profiles
      tags:
      - profiles
swagger: "2.0"

// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/usecase/export/interface.go
//
// Generated by this command:
//
//	mockgen -source ./internal/usecase/export/interface.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	io "io"
	reflect "reflect"

	dto "github.com/open-amt-cloud-toolkit/console/internal/entity/dto/v1"
	auditlog "github.com/open-amt-cloud-toolkit/go-wsman-messages/v2/pkg/wsman/amt/auditlog"
	gomock "go.uber.org/mock/gomock"
)

// MockExporter is a mock of Exporter interface.
type MockExporter struct {
	ctrl     *gomock.Controller
	recorder *MockExporterMockRecorder
}

// MockExporterMockRecorder is the mock recorder for MockExporter.
type MockExporterMockRecorder struct {
	mock *MockExporter
}

// NewMockExporter creates a new mock instance.
func NewMockExporter(ctrl *gomock.Controller) *MockExporter {
	mock := &MockExporter{ctrl: ctrl}
	mock.recorder = &MockExporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExporter) EXPECT() *MockExporterMockRecorder {
	return m.recorder
}

// ExportAuditLogsCSV mocks base method.
func (m *MockExporter) ExportAuditLogsCSV(logs []auditlog.AuditLogRecord) (io.Reader, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportAuditLogsCSV", logs)
	ret0, _ := ret[0].(io.Reader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportAuditLogsCSV indicates an expected call of ExportAuditLogsCSV.
func (mr *MockExporterMockRecorder) ExportAuditLogsCSV(logs any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportAuditLogsCSV", reflect.TypeOf((*MockExporter)(nil).ExportAuditLogsCSV), logs)
}

// ExportEventLogsCSV mocks base method.
func (m *MockExporter) ExportEventLogsCSV(logs []dto.EventLog) (io.Reader, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportEventLogsCSV", logs)
	ret0, _ := ret[0].(io.Reader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportEventLogsCSV indicates an expected call of ExportEventLogsCSV.
func (mr *MockExporterMockRecorder) ExportEventLogsCSV(logs any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportEventLogsCSV", reflect.TypeOf((*MockExporter)(nil).ExportEventLogsCSV), logs)
}

name: CI
on: pull_request
permissions:
  contents: read # for actions/checkout to fetch code

jobs:
  code-ql:
    name: runner / CodeQL
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit
      - uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017 # v4.0.0
      - name: Initialize CodeQL
        uses: github/codeql-action/init@1b1aada464948af03b950897e5eb522f92603cc2 # v3.24.9
        with:
          languages: go
      - name: Autobuild
        uses: github/codeql-action/autobuild@1b1aada464948af03b950897e5eb522f92603cc2 # v3.24.9
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@1b1aada464948af03b950897e5eb522f92603cc2 # v3.24.9
      - name: Generate Security Report
        continue-on-error: true
        uses: rsdmike/github-security-report-action@a149b24539044c92786ec39af8ba38c93496495d # v3.0.4
        with:
          template: report
          token: ${{ secrets.SECURITY_TOKEN }}
      - name: Rename Report
        shell: bash
        continue-on-error: true
        run: |
          DATE=$(date +"%Y-%m-%d")
          mv "report.pdf" "console-security-report-$DATE.pdf"
      - name: GitHub Upload Release Artifacts
        continue-on-error: true
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: report
          path: ./*.pdf

  semantic-release:
    name: runner / Validate PR and Commits
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit
      - uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017 # v4.0.0
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@7f0a61df502599e1f1f50880aaa7ec1e2c0592f2 # v6.0.1
        with:
          configFile: .github/commitlint.config.cjs
      - name: Install Dependencies
        run: npm install @commitlint/config-conventional@18.5
      - uses: JulienKode/pull-request-name-linter-action@8c05fb989d9f156ce61e33754f9802c9d3cffa58 # v0.5.0
        with:
          configuration-path: ./.github/commitlint.config.cjs

  formatting:
    name: runner / formatting
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017
      - name: Format
        run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi
      - name: Run go vet
        run: go vet ./...

  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2

  yamllint:
    name: runner / yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017
      - uses: reviewdog/action-yamllint@v1
        with:
          fail_on_error: true
          reporter: github-pr-review
          yamllint_flags: '-d "{extends: default, rules: {truthy: disable}}" .'

  trivy:
    name: runner / trivy
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag app:${{ github.sha }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55 # master
        with:
          image-ref: "app:${{ github.sha }}"
          format: "sarif"
          output: "trivy-results.sarif"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@1b1aada464948af03b950897e5eb522f92603cc2 # v3.24.9
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  dotenv-linter:
    name: runner / dotenv-linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017
      - uses: dotenv-linter/action-dotenv-linter@v2
        with:
          reporter: github-pr-review

  check-dependencies:
    name: runner / check-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
      - name: WriteGoList
        run: go list -json -m all > go.list
      - name: Nancy
        uses: sonatype-nexus-community/nancy-github-action@main
        continue-on-error: true
      - name: "Dependency Review"
        uses: actions/dependency-review-action@5bbc3ba658137598168acb2ab73b21c432dd411b # v4.2.5

  tests:
    name: runner / build and tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.x, 1.22.x]
        os: [windows-2019, windows-2022, ubuntu-22.04, ubuntu-20.04]
    steps:
      - uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version: ${{ matrix.go-version }}
      - name: build go
        run: go build ./cmd/app/main.go
      - name: Install Test Converter and run tests
        run: |
          export GOPATH="$HOME/go/"
          export PATH=$PATH:$GOPATH/bin
          go install github.com/jstemmer/go-junit-report/v2@latest
          go test -covermode=atomic -coverprofile=coverage.out -race -v ./... > test_output.txt 2>&1 || true
          cat test_output.txt
          cat test_output.txt | go-junit-report -set-exit-code > junit-${{matrix.os}}-${{matrix.go-version}}-${{github.run_attempt}}.xml
          if grep -q "FAIL" test_output.txt; then exit 1; fi
      - name: Upload Coverage Results
        uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed # v4.3.0
      - name: GitHub Upload Release Artifacts
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: JUnit Results ${{matrix.os}}-${{matrix.go-version}}-${{github.run_attempt}}
          path: junit-${{matrix.os}}-${{matrix.go-version}}-${{github.run_attempt}}.xml
      # - name: Integration tests
      #   run: "docker-compose up \
      #     --build \
      #     --abort-on-container-exit \
      #     --exit-code-from integration"

#*********************************************************************
# Copyright (c) Intel Corporation 2023
# SPDX-License-Identifier: Apache-2.0
#*********************************************************************/

# This workflow will release new versions when required using semantic-release

name: Semantic-Release CI

on:
  push:
    branches: [beta]

permissions:
  contents: read

jobs:
  prepare:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Console
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Check out Sample Web UI
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # master
        with:
          repository: open-amt-cloud-toolkit/sample-web-ui
          ref: main
          path: ./temp

      - run: npm ci
        working-directory: ./temp

      - run: npm run build-enterprise
        working-directory: ./temp

      - name: move files
        run: mv ./temp/ui/* ./internal/controller/http/ui

      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.23.0"
      - name: ðŸ”¬ Check semantic versioning
        id: semantic-release
        shell: bash
        run: |
            GITHUB_REF=${{ github.head_ref || github.ref_name }}
            npx semantic-release@21 --no-ci --dry-run --plugins @semantic-release/commit-analyzer --branches beta
            VERSION=$(cat .VERSION)
        env:
          GITHUB_TOKEN: ${{ secrets.ROSIE_TOKEN }}
      - shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      #build linux 
      - shell: bash
        if: matrix.os == 'ubuntu-latest'
        run: |
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -ldflags "-s -w -X 'github.com/open-amt-cloud-toolkit/console/internal/app.Version=$VERSION'" -trimpath -o dist/linux/console_linux_x64 ./cmd/app/main.go
      
      - shell: bash
        if: matrix.os == 'windows-latest'
        run: |
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build -ldflags "-s -w -X 'github.com/open-amt-cloud-toolkit/console/internal/app.Version=$VERSION'" -trimpath -o dist/windows/console_windows_x64.exe ./cmd/app/main.go
      
      - shell: bash
        if: matrix.os == 'macos-latest'
        run: |
          CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -ldflags "-s -w -X 'github.com/open-amt-cloud-toolkit/console/internal/app.Version=$VERSION'" -trimpath -o dist/darwin/console_mac_arm64 ./cmd/app/main.go
      
      - uses: actions/cache@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          path: dist/linux
          key: linux-${{ env.sha_short }}

      - uses: actions/cache@v4
        if: matrix.os == 'macos-latest'
        with:
          path: dist/darwin
          key: darwin-${{ env.sha_short }}

      - uses: actions/cache@v4
        if: matrix.os == 'windows-latest'
        with:
          path: dist/windows
          key: windows-${{ env.sha_short }}
          enableCrossOsArchive: true

  release:
    permissions:
      contents: write # for Git to git push
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout Console
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      
      # copy the caches from prepare
      - shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          path: dist/linux
          key: linux-${{ env.sha_short }}
      - uses: actions/cache@v4
        with:
          path: dist/darwin
          key: darwin-${{ env.sha_short }}
      - uses: actions/cache@v4
        with:
          path: dist/windows
          key: windows-${{ env.sha_short }}
          enableCrossOsArchive: true
      - run: |
          ls -l dist
          ls -l

      - name: Check out Sample Web UI
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # master
        with:
          repository: open-amt-cloud-toolkit/sample-web-ui
          ref: main
          path: ./temp

      - run: npm ci
        working-directory: ./temp

      - run: npm run build-enterprise
        working-directory: ./temp

      - name: move files
        run: mv ./temp/ui/* ./internal/controller/http/ui

      - name: Docker Login
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: vprodemo.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          logout: true
      
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@b1b432f13acb7768e0c8efdec416d363a57546f2 # v4.1.1
        if: steps.cache.outputs.cache-hit != 'true' # do not run if cache hit
        with:
          semantic_version:
            19.0.5 # It is recommended to specify a version range
            # for semantic-release when using
            # semantic-release-action lower than @v3
          extra_plugins: |
            @semantic-release/exec@6.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.ROSIE_TOKEN }}
